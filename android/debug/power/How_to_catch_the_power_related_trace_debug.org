* TCL平台相关
  | 命令         | 功能                             |
  |--------------+----------------------------------|
  | *#3228#      | 看版本号                         |
  | *#*#0574#*#* | feedback                         |
  | *#2886#      | MMITest                          |
  | ###2324#     | 查看并开关diag端口保护           |
  | ###666#      | All google apps enabled(包括gms) |
* 电源测量设置
  Enable airplane mode (启用飞行模式)
  Disable WIFI & BT & NFC(禁用WIFI和BT)
  Disable GPS (Location) (禁用GPS（位置）)
  Disable Auto Brightness (禁用自动亮度)
  GMS disabled (大陆goole被墙，需要关掉google相关服务，不然google相关应用会不停的尝试联网,对测试结果有很大干扰)
  Disable Feedback
* 电源测试
** Powertop
   在android源代码中的external/powertop目录下
   #+begin_src bash
     # 1.链接USB
     # 2.执行powertop命令
     adb push powertop > /system/bin
     adb shell chmod 777 system/bin/powertop
     adb shell
     sleep 10 && powertop -r -d -t 15 > /sdcard/powertop.log &
     # 3.执行上述命令的10秒内断开usb，因为它将在10后开始捕获powertop数据。大约35秒后连接USB并把powertop数据导出手机
     adb pull /sdcard/powertop.txt .
   #+end_src
** Top
   #+begin_src bash
     # 1.链接USB
     # 2.
     adb shell
     sleep 10 && top -d 15 > /sdcard/top.txt &
     # 3.执行上述命令的10秒内断开usb，因为它将在10后开始捕获top数据。大约50秒后连接USB并把powertop数据导出手机
     adb pull /sdcard/top.txt .
   #+end_src
** Clocks 收集时钟转储日志
   #+begin_src bash
     # 1.链接USB
     # 2.
     sleep 10 &&
         while true;
         do

             echo "===============================================================";
             cat /proc/uptime;
             cd /sys/kernel/debug/clk;
             for i in *;
             do if [ -d $i ];
                then if [ "$(cat $i/enable)" == "1" ];
                     then if [ -e $i/measure ]; then
                              echo $i \=\> enable=`cat $i/enable` measure=`cat $i/measure`;
                          else
                              echo $i \=\> enable=`cat $i/enable` rate=`cat $i/rate`;
                          fi;
                     fi;
                fi;
             done;

             echo "---------------------------------------------------------------";
             cd /sys/class/regulator;
             for i in *;
             do
                 if [ -d $i ];
                 then if [ -e $i/state ];
                      then if [ "$(cat $i/state)" == "enabled" ];
                           then if [ -e $i/microvolts ];
                                then
                                    echo $i \=\> name=`cat $i/name` state=`cat $i/state` microvolt=`cat $i/microvolts`;
                                else
                                    echo $i \=\> name=`cat $i/name` state=`cat $i/state` microvolt= N\/A;
                                fi;
                           fi;
                      fi;
                 fi;
             done;

             sleep 3;
         done > /sdcard/dumpclk.txt &
     # 3.执行上述命令的10秒内断开usb，因为它将在10后开始捕获clocks数据。大约50秒后连接USB并把clock数据导出手机
     adb pull /sdcard/dumpclk.txt
   #+end_src
** Perf
   perf是Linux下的系统性能调试工具，它包含22种子工具，常用的有以下5种
   perf-list
   perf-stat
   perf-top
   perf-record
   perf-report
** Ftrace Logs
   #+begin_src bash
     # 1.链接USB
     # 2.
     adb root
     adb remount
     mount -t debugfs nodev /d/
     sleep 10 &&
         echo 51200 > /d/tracing/buffer_size_kb &&
         echo "" > /d/tracing/set_event &&
         echo "" > /d/tracing/trace &&
         echo "irq:* sched:* power:* workqueue:* msm_low_power:* kgsl:*" > /d/tracing/set_event &&
         echo 1 > /d/tracing/tracing_on  &&
         sleep 15 &&
         echo 0 > /d/tracing/tracing_on &&
         cat /d/tracing/trace > /data/local/ftrace.txt &
     # 3.执行上述命令的10秒内断开usb，大约1分钟后链接USB，把Ftrace日志拉出来
     adb pull /data/local/ftrace.txt .
   #+end_src
** Systrace Logs
   #+begin_src bash
   #+end_src
** Surfacefinger
   不晓得他作用
* 电量的测试方法(adb shell dumpsys batterystats)
  historian.py脚本下载https://github.com/google/battery-historian
* 电源调试的日志
  + Clock dumps
    提供每个时钟的状态(dmesg查看)
    echo 1 > /sys/kernel/debug/clk/debug_suspend
  + GPIO dumps
    提供每个GPIO的状态,检测以确定GPIO是否处于最低功耗状态。
    可用于在系统睡眠期间调试焊垫电流泄漏
    for num in `seq 1 300`
    do
        echo $num >export
        echo "gpio$num =>"`cat gpio$num/direction`
        echo $num >unexport
    done
  + PMIC dumps
    提供LDO/SMPS状态
    用于调试所有用例和场景,检测是否有未知的调节器在睡眠期间保持ON
  + QXDM logs
  + msm_pm_stats/lpm_stats
    cat /d/lpm_stats/stats
  + Node Power Architecture (NPA) logs (RPM/modem)
  + Universal Logs (Ulogs) (RPM/modem)
  + Dmesg and Logcat logs
    adb logcat -v time > YearMounthDayHourMinute_logcat.txt   #main log
    adb logcat -v time -b events > YearMounthDayHourMinute_logcat_event.txt   #event log
    adb logcat -v time -b radio > YearMounthDayHourMinute_logcat_radio.txt    #radio log
    adb shell dmesg > YearMounthDayHourMinute_dmesg.txt         #kernel log
  + Ftrace logs
  + Wakelocks/wake-up sources
    + wakeup_sources
      cat /d/wakeup_sources  #Check wake locks  检查唤醒源
      cat ~/wakelocks.txt | awk '{print $1"\t\t\t\t\t\t"$6}' #过滤wakeup_sources
    + check xosd/vmin
      cat /sys/kernel/debug/rpm_stats  #check xosd/vmin  检查关闭时钟次数，低电流次数,主要看系统睡下去没
    + interrupts
      cat /proc/interrupts # Check frequent interrupts activity  #检查频繁中断活动
      sleep 20 && cat /proc/interrupts > /sdcard/interrupt1.txt && sleep 30 && cat /proc/interrupts > /sdcard/interrupt2.txt &
    + wakeup debug mask
      echo 1 > /sys/kernel/debug/clk/debug_suspend
      echo 1 > /sys/module/msm_show_resume_irq/parameters/debug_mask
      echo 4 > /sys/module/wakelock/parameters/debug_mask
      echo 1 > /sys/module/lpm_levels/parameters/debug_mask
      echo 0x16 > /sys/module/smd/parameters/debug_mask
  + Check clocks preventing XO shutdown and VDD minimization
    #+begin_src shell
      + Enable the clock debug suspend using echo 1 > /d/clk/debug_suspend.
      + After enabling this flag, the enabled clocks are displayed when the system goes into Suspend mode in the Dmesg logs.
      + Some of the clocks are always expected to be shown as enabled in this log. However, if any clock other than the usual major system clocks are seen to be enabled, it can be the reason for preventing power collapse.
          + Examples of clocks that must not be visible in this log
          + Peripheral clocks
          + Display-related clocks (MDSS)
          + Multimedia subsystem related clock
    #+end_src
  + Hansei.py for RPM RAM dump parsing
* 命令
  + Disable kernel thermal
    echo 0 > /sys/module/msm_thermal/core_control/enabled
  + 通过wifi链接adb
    #+begin_src bash
      a. Connect a USB and verify that Wi-Fi is working on the device.
          – adb tcpip 5555
          – adb shell netcfg
          – <output> wlan0 UP 10.42.118.17/22 0x00001043 f0:25:b7:f5:02:81
          – adb connect 10.42.118.17
              • In Wi-Fi settings. click the Wi-Fi network name to get the IP.
      b. Remove the USB and try adb devices.
      c. To end the session:
          – adb disconnect
    #+end_src
* 功耗流程
  先看低电流() 再看唤醒源
  #+begin_src bash
    # 1.链接USB
    # 2.输入以下命令
    adb root
    adb remount
    adb shell
    cd /sys/kernel/debug/tracing
    echo 0 > tracing_on; #关闭
    echo 100000 > buffer_size_kb;#设置缓存区大小

    echo "" > set_event #清空
    echo "" > trace #清空缓冲区
    sync
    echo "power:cpu_idle power:cpu_frequency power:cpu_frequency_switch_start" >> set_event
    echo "msm_low_power:* sched:sched_cpu_hotplug sched:sched_switch" >> set_event
    echo "sched:sched_wakeup sched:sched_wakeup_new sched:sched_enq_deq_task" >> set_event
    echo "power:clock_set_rate power:clock_enable power:clock_disable msm_bus:bus_update_request" >> set_event
    echo "irq:*" >> set_event
    echo "mdss:mdp_mixer_update mdss:mdp_sspp_change mdss:mdp_commit" >> set_event
    echo "kgsl:kgsl_pwrlevel kgsl:kgsl_buslevel kgsl:kgsl_pwr_set_state" >> set_event

    echo "1" > tracing_on && #开启trace
    sleep 10 &&              #运行10s
        echo "0" > tracing_on && #关闭trace
        cat trace > /sdcard/trace.txt &

    # 3.执行上述命令的10秒内断开usb，大约1分钟后链接USB，把Ftrace日志拉出来
    adb pull /sdcard/trace.txt ~
  #+end_src
* PowerTop和Top
    sleep 3 && while true;
    do
        echo "==============================================";
        date +%Y-%m-%d\ %T
        top -m 25 -d 1 -n 1 -t;
        echo "----------------------------------------------";
        /data/powertop -r -d -t 5
    done > data/dumptop.txt &
* 判断modem是否睡下去
    adb shell cat /sys/power/system_sleep/stats > rpm_stats00.log
    adb shell cat /sys/power/rphm_sleep/master_stats > rpm_master_stats00.log
    Remove usb, then standby 5min.When current stable, catch logs:
    adb shell cat cat /sys/power/system_sleep/stats > rpm_stats11.log
    adb shell cat /sys/power/rphm_sleep/master_stats > rpm_master_stats11.log
* 禁止/允许usb充电
    #+begin_src bash
    # Allow usb charging to be disabled peristently
    on property:persist.usb.chgdisabled=1
        write /sys/class/power_supply/battery/charging_enabled 0

    on property:persist.usb.chgdisabled=0
        write /sys/class/power_supply/battery/charging_enabled 1
    #+end_src
